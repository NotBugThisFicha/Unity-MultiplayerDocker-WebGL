server {
    listen       80;
    
    server_name  localhost;

  # On-disk Brotli-precompressed data files should be served with compression enabled:
     location ~ .+\.(data|symbols\.json)\.br$ {
         # Because this file is already pre-compressed on disk, disable the on-demand compression on it.
         # Otherwise nginx would attempt double compression.
         gzip off;
         add_header Content-Encoding br;
         default_type application/octet-stream;
     }
     
     # On-disk Brotli-precompressed JavaScript code files:
     location ~ .+\.js\.br$ {
         gzip off; # Do not attempt dynamic gzip compression on an already compressed file
         add_header Content-Encoding br;
         default_type application/javascript;
     }
     
     # On-disk Brotli-precompressed WebAssembly files:
     location ~ .+\.wasm\.br$ {
         gzip off; # Do not attempt dynamic gzip compression on an already compressed file
         add_header Content-Encoding br;
         # Enable streaming WebAssembly compilation by specifying the correct MIME type for
         # Wasm files.
         default_type application/wasm;
     }
     
     # On-disk gzip-precompressed data files should be served with compression enabled:
     location ~ .+\.(data|symbols\.json)\.gz$ {
         gzip off; # Do not attempt dynamic gzip compression on an already compressed file
         add_header Content-Encoding gzip;
         default_type application/octet-stream;
     }
     
     # On-disk gzip-precompressed JavaScript code files:
     location ~ .+\.js\.gz$ {
         gzip off; # Do not attempt dynamic gzip compression on an already compressed file
         add_header Content-Encoding gzip;
         default_type application/javascript;
     }
     
     # On-disk gzip-precompressed WebAssembly files:
     location ~ .+\.wasm\.gz$ {
         gzip off; # Do not attempt dynamic gzip compression on an already compressed file
         add_header Content-Encoding gzip;
         # Enable streaming WebAssembly compilation by specifying the correct MIME type for
         # Wasm files.
         default_type application/wasm;
     }
 
     location / {
         root   /var/www/BuildWebGL;
         index index.html;

         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";

                      
         add_header 'Access-Control-Allow-Origin' '*' always;
             
         gzip            on;
         gzip_min_length 1000;
         gzip_proxied    expired no-cache no-store private auth;
         gzip_types      text/plain application/xml;
          
          
     }

    error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}